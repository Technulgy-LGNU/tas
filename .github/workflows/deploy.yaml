name: pipeline
on:
  push:
    branches:
      - "prod"

permissions:
  packages: write

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: |
            ghcr.io/technulgy-lgnu/tas:latest
            ghcr.io/technulgy-lgnu/tas:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: create env file
        run: |
          echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> ./.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> ./.env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> ./.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ./.env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> ./.env
          echo "DB_TIMEZONE=${{ secrets.DB_TIMEZONE }}" >> ./.env
          echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> ./.env
          echo "EMAIL_SENDER_EMAIL=${{ secrets.EMAIL_SENDER_EMAIL }}" >> ./.env
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> ./.env
          echo "DISCORD_HOOK=${{ secrets.DISCORD_HOOK }}" >> ./.env
          echo "TDPUpload_Key=${{ secrets.TDPUpload_Key }}" >> ./.env

      - name: Docker Stack Deploy
        uses: cssnr/stack-deploy-action@v1
        with:
          name: technulgy-tas
          file: docker-stack.yaml
          host: ${{ secrets.DEPLOY_HOST }}
          user: ${{ secrets.DEPLOY_USER }}
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          env_file: ./.env
